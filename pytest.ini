[tool:pytest]
# Pytest configuration for panDecay

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --color=yes

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    slow: Tests that take longer than 1 second to run
    external: Tests that require external tools (PAUP*, MrBayes)
    memory: Tests related to memory management
    performance: Performance and benchmark tests
    
# Minimum version requirements
minversion = 7.0

# Test collection
collect_ignore = [
    "setup.py",
    "docs/",
    "build/",
    "dist/"
]

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Specific warnings to catch
    error::src.exceptions.analysis_exceptions.AnalysisError
    error::src.exceptions.tool_exceptions.ExternalToolError

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    setup.py
    src/_version.py
    */venv/*
    */virtualenv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov